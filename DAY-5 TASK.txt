1.
//anonymes function
let odd =function(){

    let array =[150,5,2,3,4,11,12,13,14,15]


let result =[]
    for(let i=0;i<array.length;i++){

        if(array[i]%2!=0){
        
        
        result.push(array[i]);
        
        }
        }
return console.log(result);

}
odd();

output;

(5) [5, 3, 11, 13, 15]
0: 5
1: 3
2: 11
3: 13 
4: 15
length: 5
[[Prototype]]: Array(0)

////IIFE function

(function(array){

    
let result =[]
    for(let i=0;i<array.length;i++){

        if(array[i]%2!=0){
        
        
        result.push(array[i]);
        
        }
        }
return console.log(result);

})
([150,5,2,3,4,11,12,13,14,15]);

output;

(5) [5, 3, 11, 13, 15]
0: 5
1: 3
2: 11
3: 13 
4: 15
length: 5
[[Prototype]]: Array(0)



2.
let str=function(){
    let string_array =["moses","shajan","priya","jaya"];
    for(let i=0;i<string_array.length;i++){


        console.log(string_array[i].charAt(0).toUpperCase()+ string_array[i].slice(1))

        }
 
}

str();


let str=function(string_array){

    for(let i=0;i<string_array.length;i++){


        console.log(string_array[i].charAt(0).toUpperCase()+ string_array[i].slice(1))

        }
 
}


str(["moses","shajan","priya","jaya"]);





output;
Moses
Shajan
Priya
Jaya


\\\\\\IIFE

(function(string_array){

    for(let i=0;i<string_array.length;i++){


        console.log(string_array[i].charAt(0).toUpperCase()+ string_array[i].slice(1))

        }
 
})(["moses","shajan","priya","jaya"]);

output;
Moses
Shajan
Priya
Jaya
undefined

////IIFE 2.
(function(string_array){
let b =[];
    for(let i=0;i<string_array.length;i++){


      b.push(string_array[i].charAt(0).toUpperCase()+ string_array[i].slice(1))

        }
 return b
})(["moses","shajan","priya","jaya"]);

output;

(4) ['Moses', 'Shajan', 'Priya', 'Jaya']


// 3.

let array_add=function(array_int){
let sum =0;
    for(let i=0;i<=array_int.length;i++){

          sum =sum+i;
        
        }

        return `total is ${sum}` 
 
}

console.log(array_add([1,2,3,4]));

output;
total is 10

////IIFE
(function(array_int){
let sum =0;
    for(let i=0;i<=array_int.length;i++){

          sum =sum+i;
        
        }

        return `total is ${sum}` 
 
})([1,2,3,4]);

output;

'total is 10'


5.

let a=[];

let pali =function(drome){
  
    
    for(let i=0;i<drome.length;i++){
        
        b =drome[i].split("").reverse().join("")
    
    if (b==drome[i]){
    
    a.push(drome[i])
    
    }
    }
    return a
    
}

console.log (pali(["racecar","ada","join","vipe"]));



output;

(2) ['racecar', 'ada']
0: "racecar"
1: "ada"
length: 2
[[Prototype]]: Array(0)

////IIFE


let a=[];

(function(drome){
  
    
    for(let i=0;i<drome.length;i++){
        
        b =drome[i].split("").reverse().join("")
    
    if (b==drome[i]){
    
    a.push(drome[i])
    
    }
    }
    return a
    
})(["racecar","ada","join","vipe"]);

output;
(2) ['racecar', 'ada']
0: "racecar"
1: "ada"
length: 2
[[Prototype]]: Array(0)



5.

let duplicateremover =function(duplicateremover){

    let result5 =[];
    for(let i=0;i<duplicateremover.length;i++){
    if(!result5.includes(duplicateremover[i])){
    
    result5.push(duplicateremover[i])
    }
    }
return result5
}
console.log(duplicateremover(["hellow","hellow","hola"]));


output;
2) ['hellow', 'hola']
0: "hellow"
1: "hola"
length: 2
[[Prototype]]: Array(0)at: ƒ at()concat: ƒ concat()constructor: ƒ Array()copyWithin: ƒ copyWithin()entries: ƒ entries()every: ƒ every()fill: ƒ fill()filter: ƒ filter()find: ƒ find()findIndex: ƒ findIndex()findLast: ƒ findLast()findLastIndex: ƒ findLastIndex()flat: ƒ flat()flatMap: ƒ flatMap()forEach: ƒ forEach()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()lastIndexOf: ƒ lastIndexOf()length: 0map: ƒ map()pop: ƒ pop()push: ƒ push()reduce: ƒ reduce()reduceRight: ƒ reduceRight()reverse: ƒ reverse()shift: ƒ shift()slice: ƒ slice()some: ƒ some()sort: ƒ sort()splice: ƒ splice()toLocaleString: ƒ toLocaleString()toString: ƒ toString()unshift: ƒ unshift()values: ƒ values()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {at: true, copyWithin: true, entries: true, fill: true, find: true, …}[[Prototype]]: Object

////IIFE

(function(duplicateremover){

    let result5 =[];
    for(let i=0;i<duplicateremover.length;i++){
    if(!result5.includes(duplicateremover[i])){
    
    result5.push(duplicateremover[i])
    }
    }
return result5
})(["hellow","hellow","hola","mola","mola"]);

output;

(3) ['hellow', 'hola', 'mola']

6.

let array = function(arr,reverse){
for(let i=0;i<reverse;i++)
  arr.unshift(arr.pop());
  return arr;
}
console.log(array([1, 2, 3, 4, 5],2));
output; 

(5) [4, 5, 1, 2, 3]


///IIFE

(function(arr,reverse){
  if (reverse) arr.unshift(arr.pop());
  else arr.push(arr.shift());
  return arr;
})([1, 2, 3, 4, 5],true);
output; 

(5) [5, 1, 2, 3, 4]

(function(arr){
 arr.unshift(arr.pop());
 
  return arr;
})([1, 2, 3, 4, 5]);
 output;
 (5) [4, 5, 1, 2, 3]


////////////////////////////////////////////
arrow function


let odd =(array)=>{

let result =[]
    for(let i=0;i<array.length;i++){

        if(array[i]%2!=0){
        
        
        result.push(array[i]);     
        }
        }
return result;

}
console.log(odd([150,5,2,3,4,11,12,13,14,15]));

output;

(5) [5, 3, 11, 13, 15]

